{
	"openapi": "3.0.1",
	"info": {
		"title": "OpenAPI definition",
		"version": "v0"
	},
	"servers": [
		{
			"url": "http://localhost:8080",
			"description": "Generated server url"
		}
	],
	"paths": {
		"/api/v1/weather": {
			"get": {
				"tags": [
					"weather-api"
				],
				"summary": "Return all samples",
				"operationId": "getAllSamples",
				"responses": {
					"200": {
						"description": "List of samples",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/SampleTransfer"
									}
								}
							}
						}
					},
					"404": {
						"description": "Sample not found",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"tags": [
					"weather-api"
				],
				"summary": "Updates a sample",
				"operationId": "updateSample",
				"requestBody": {
					"description": "Sample to be updated, with ID",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SampleTransfer"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Sample update",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Sample not found",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"tags": [
					"weather-api"
				],
				"summary": "Creates a sample",
				"operationId": "createSample",
				"requestBody": {
					"description": "Sample to be created",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SampleSaveTransfer"
							}
						}
					},
					"required": true
				},
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/api/v1/weather/{id}": {
			"get": {
				"tags": [
					"weather-api"
				],
				"summary": "Return specific sample based on it's id",
				"operationId": "getSample",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Sample with given ID",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SampleTransfer"
								}
							}
						}
					},
					"404": {
						"description": "Sample not found",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"weather-api"
				],
				"summary": "Deletes a sample based on it's id",
				"operationId": "deleteSample",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Deleted",
						"content": {
							"*/*": {
								"schema": {
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"*/*": {
								"schema": {
									"type": "object"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/weather/average/from/{startDate}/to/{endDate}": {
			"get": {
				"tags": [
					"weather-api"
				],
				"summary": "Return average temperature for all sensors given specific date range",
				"operationId": "average",
				"parameters": [
					{
						"name": "startDate",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "endDate",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Average temperature for given date range",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AverageResponse"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/weather/average/sensor/{sensorId}/from/{startDate}/to/{endDate}": {
			"get": {
				"tags": [
					"weather-api"
				],
				"summary": "Return average temperature for given sensors given specific date range",
				"operationId": "averageForSensor",
				"parameters": [
					{
						"name": "sensorId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "startDate",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "endDate",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Average temperature for given date range and sensor",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AverageResponse"
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"SampleTransfer": {
				"type": "object",
				"properties": {
					"temperature": {
						"type": "number"
					},
					"dateAndTime": {
						"type": "string",
						"format": "date-time"
					},
					"sensorId": {
						"type": "integer",
						"format": "int32"
					},
					"id": {
						"type": "string"
					}
				}
			},
			"SampleSaveTransfer": {
				"type": "object",
				"properties": {
					"temperature": {
						"type": "number"
					},
					"dateAndTime": {
						"type": "string",
						"format": "date-time"
					},
					"sensorId": {
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"AverageResponse": {
				"type": "object",
				"properties": {
					"average": {
						"type": "number"
					}
				}
			}
		}
	}
}